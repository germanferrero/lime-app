{"version":3,"sources":["webpack:///../node_modules/@storybook/components/node_modules/core-js/modules/es.regexp.constructor.js","webpack:///../node_modules/@storybook/components/node_modules/core-js/modules/es.string.replace.js","webpack:///../node_modules/overlayscrollbars/js/OverlayScrollbars.js","webpack:///../node_modules/@storybook/components/node_modules/core-js/internals/get-substitution.js","webpack:///../node_modules/@storybook/components/dist/esm/ScrollArea/OverlayScrollbars.js"],"names":["DESCRIPTORS","require","global","isForced","inheritIfRequired","defineProperty","f","getOwnPropertyNames","isRegExp","getFlags","stickyHelpers","redefine","fails","setInternalState","set","setSpecies","MATCH","wellKnownSymbol","NativeRegExp","RegExp","RegExpPrototype","prototype","re1","re2","CORRECT_NEW","UNSUPPORTED_Y","RegExpWrapper","pattern","flags","sticky","thisIsRegExp","this","patternIsRegExp","flagsAreUndefined","undefined","constructor","source","call","indexOf","replace","result","proxy","key","configurable","get","it","keys","index","length","fixRegExpWellKnownSymbolLogic","anObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","getSubstitution","regExpExec","max","Math","min","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","String","regexp","res","done","value","rx","S","functionalReplace","fullUnicode","unicode","lastIndex","results","push","accumulatedResult","nextSourcePosition","i","matched","position","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","slice","window","define","document","_targets","_easingsMath","TYPES","LEXICON","c","s","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","firstLetterToUpper","str","charAt","toUpperCase","jsCache","cssCache","cssPrefixes","jsPrefixes","_cssPrefixes","_jsPrefixes","_cssProperty","name","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","split","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","arguments","fNOP","fBound","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","eventDoc","originalEvent","target","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","Object","toString","MATH","JQUERY","jQuery","EASING","PI","cos","sin","w","pow","t","sqrt","n","asin","a","abs","o","swing","linear","easeInQuad","b","d","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","extend","src","copyIsArray","copy","options","clone","deep","_type","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","each","callback","isArrayLike","stripAndCollapse","match","_rnothtmlwhite","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","_cssNumber","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","nextAnim","q","splice","animate","props","duration","easing","complete","_animations","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","parseFloat","start","pos","speacialEasing","startTime","elementIsVisible","getClientRects","elms","base","elements","innerHTML","children","self","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classList","classNamePrepared","contains","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","top","pageYOffset","left","pageXOffset","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","clearQ","jump","jumpToEnd","INSTANCES","instance","argLen","PLUGIN","initOverlayScrollbarsStatics","_pluginsGlobals","OverlayScrollbarsGlobals","_pluginsOptions","_defaults","_pluginsAutoUpdateLoop","OverlayScrollbarsAutoUpdateLoop","defaultOptions","calcNativeScrollbarSize","measureElement","_base","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","trident","edge","rv","parseIntFunc","parseInt","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","supportResizeObserver","supportMutationObserver","getWindowDPR","devicePixelRatio","screen","deviceXDPI","logicalXDPI","windowWidth","windowHeight","windowDpr","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","valTwo","absValOne","absValTwo","oldScrollbarSize","update","globals","_loopID","_inArray","_getNow","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","OverlayScrollbarsInstance","pluginTargetElement","extensions","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","capture","_capture","nativeParam","_supportPassiveEvents","passive","_passive","addDestroyEventListener","_destroyEvents","setupResizeObserver","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","_isRTL","_rtlScrollBehavior","_supportResizeObserver","generateDiv","_cassNamesPrefix","observe","_msieVersion","_autoUpdateRecommended","dir","_classNameResizeObserverItemElement","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","reset","onResized","onScroll","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","_documentElementNative","findFirst","_strDot","onload","wnd","contentDocument","defaultView","data","_sizeObserverElementNative","directionChanged","_hostElement","scrollLeftValue","_cssDirectionDetectedCache","_sizeObserverElement","resizeObserverObj","disconnect","createMutationObservers","_supportMutationObserver","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserver","contentLastUpdate","_mutationObserverContentCallback","mutations","doUpdate","_initialized","_sleeping","mutation","attributeName","mutationType","_contentElementNative","_isTextarea","_classNameHostElement","hostClassNamesChanged","oldValue","isUnknownMutation","_heightAutoCache","_widthAutoCache","_destroyed","textareaUpdate","_mutationObserverHost","_mutationObserverHostCallback","doUpdateForce","mutatedAttrs","_domExists","_classNameHostElementForeign","createHostClassNameRegExp","_hostElementNative","filter","updateViewportAttrsFromTarget","_mutationObserverContent","connectMutationObservers","_mutationObserversConnected","attributes","attributeOldValue","attributeFilter","_mutationObserverAttrsHost","_targetElementNative","subtree","childList","characterData","_mutationObserverAttrsTextarea","disconnectMutationObservers","hostOnResized","changed","hostSize","h","checkCache","_hostElementSizeChangeDetectedCache","_hostSizeChanged","hostOnMouseEnter","_scrollbarsAutoHideLeave","refreshScrollbarsAutoHide","hostOnMouseLeave","_bodyElement","_classNameDragging","hostOnMouseMove","_scrollbarsAutoHideMove","_scrollbarsAutoHideMoveTimeoutId","documentOnSelectStart","updateOnLoadCallback","elm","eachUpdateOnLoad","updateOnLoadSelector","_contentSizeChanged","setupHostMouseTouchEvents","destroy","bodyMinSizeChanged","bodyMinSize","_isBody","_contentArrangeElement","parseToZeroOrNumber","_strMinMinus","_bodyMinSizeCache","oldClassNames","newClassNames","regex","currClasses","diff","a1","a2","k","getArrayDifferences","idx","_classNameThemeNone","attrs","_viewportAttrsFromTarget","targetAttr","_targetElement","_viewportElement","origWidth","width","origHeight","height","minWidth","_viewportSize","minHeight","doMeasure","_textareaAutoWrappingCache","_textareaCoverElement","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","_swallowedUpdateTimeout","_swallowedUpdateHints","_force","displayIsHidden","hostSizeChanged","contentSizeChanged","force","changedOptions","_changedOptions","swallow","_lastUpdateTime","_nativeScrollbarStyling","_nativeScrollbarIsOverlaid","_nativeScrollbarSize","extendDeep","_nativeScrollbarMinSize","checkCacheAutoForce","currScroll","currentPreparedOptionsScrollbars","_currentPreparedOptions","scrollbars","currentPreparedOptionsTextarea","textarea","scrollbarsVisibility","visibility","scrollbarsVisibilityChanged","_scrollbarsVisibilityCache","scrollbarsAutoHide","autoHide","scrollbarsAutoHideChanged","_scrollbarsAutoHideCache","scrollbarsClickScrolling","clickScrolling","scrollbarsClickScrollingChanged","_scrollbarsClickScrollingCache","scrollbarsDragScrolling","dragScrolling","scrollbarsDragScrollingChanged","_scrollbarsDragScrollingCache","classNameChanged","_classNameCache","resize","resizeChanged","_resizeCache","paddingAbsolute","paddingAbsoluteChanged","_paddingAbsoluteCache","clipAlways","clipAlwaysChanged","_clipAlwaysCache","sizeAutoCapable","sizeAutoCapableChanged","_sizeAutoCapableCache","ignoreOverlayScrollbarHiding","nativeScrollbarsOverlaid","showNativeScrollbars","ignoreOverlayScrollbarHidingChanged","_ignoreOverlayScrollbarHidingCache","autoUpdate","autoUpdateChanged","_autoUpdateCache","overflowBehavior","overflowBehaviorChanged","_overflowBehaviorCache","textareaDynWidth","dynWidth","textareaDynWidthChanged","_textareaDynWidthCache","textareaDynHeight","dynHeight","textareaDynHeightChanged","_textareaDynHeightCache","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideDelay","autoHideDelay","_oldClassName","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_normalizeRTLCache","normalizeRTL","_hasOverflowCache","_contentGlueElement","_paddingElement","_sizeAutoObserverAdded","_sizeAutoObserverElement","_sizeAutoObserverElementNative","oldSize","newSize","_cssCalc","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","_cssDirectionCache","boxSizing","boxSizingChanged","_cssBoxSizingCache","padding","getTopRightBottomLeftHost","_isBorderBox","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","_paddingX","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAuto","widthAutoChanged","wasWidthAuto","heightAuto","bottom","heightAutoChanged","wasHeightAuto","border","margin","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","_paddingElementNative","paddingAbsoluteX","r","paddingAbsoluteY","_paddingY","_cssPaddingCache","_borderX","_borderY","_cssBorderCache","_marginX","_marginY","_cssMarginCache","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","_textareaSizeCache","textareaDynOrigSize","_strMaxMinus","_contentElement","viewportElementResetCSS","resetXTmp","_hideOverflowCache","ys","resetBottomTmp","xs","contentMeasureElement","getContentMeasureElement","contentSize","hostAbsoluteRectSize","contentGlueSize","_contentGlueSizeCache","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","getScrollbarVars","wh","_w_h","strWH","_width_height","autoSize","viewportSize","contentScrollSize","_contentScrollSizeCache","_hostSizeCache","hideOverflowForceTextarea","previousOverflowAmount","_overflowAmountCache","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","overflowAmount","hasOverflow","hideOverflow","canScroll","viewportRect","setOverflowVariables","xyI","_x_y","xy","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","_viewportElementNative","setContentElementCSS","contentArrangeElementCSS","arrangeContent","arrangeChanged","_overlayScrollbarDummySize","_arrangeContentSizeCache","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","_classNameViewportNativeScrollbarsInvisible","setViewportCSS","viewportElementCSS","XY","_X_Y","_contentBorderSize","_strPaddingMinus","_strMarginMinus","strOverflow","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","substr","widestRow","textareaLastCol","cursorRow","cursorCol","_cursorRow","_cursorColumn","_rows","_columns","_widestRow","_cursorPosition","_cursorMax","getTextareaInfo","textareaRowsChanged","_textareaInfoCache","cursorIsLastPosition","_textareaHasFocus","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameHostRTL","_classNameHostResizeDisabled","_scrollbarCornerElement","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameHostScrolling","refreshScrollbarHandleLength","refreshScrollbarHandleOffset","refreshScrollbarsInteractive","dispatchCallback","isRTL","xScrollable","yScrollable","clipped","updateOnLoad","updateElementsOnLoad","forced","_updateOnLoadElms","setOptions","newOptions","validatedOpts","_validate","_template","_currentOptions","_default","_prepared","setupStructureDOM","classNameTextareaElementFull","_classNameTextareaElement","_classNameTextInherit","textareaClass","adoptAttrs","inheritedAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","hostElementCSS","selectOrGenerateDivByClass","_classNameTextareaCoverElement","_classNamesDynamicDestroy","_htmlElement","_classNameViewportNativeScrollbarsOverlaid","setupStructureEvents","updateTextarea","doClearInterval","clearInterval","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","keyCode","setInterval","strFocus","_strTransitionEndEvent","propertyName","affectingPropsX","affectingPropsXContentBox","_strBorderMinus","affectingPropsYContentBox","checkX","sizeIsAffected","checkPropertyName","isSizeAffectingCSSProperty","nativeOverlayScrollbarsAreActive","_scrollbarsHandlesDefineScrollPos","setupScrollbarsDOM","resetScrollbarDOM","isHorizontal","scrollbar","_scrollbar","_track","_handle","selectOrGenerateScrollbarDOM","horizontalElements","verticalElements","_classNameScrollbar","track","handle","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","setupScrollbarEvents","getPointerPosition","insideIFrame","getPreparedScrollbarsOption","increaseTrackScrollAmount","scrollDurationFactor","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","increaseDecreaseScrollAmountKeyCodes","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","trackLength","scrollbarVarsInfo","_trackLength","handleLength","_handleLength","scrollDelta","_maxScroll","mouseDownOffset","mouseDownInvertedScale","isFinite","scroll","mouseDownScroll","documentMouseTouchUp","_documentElement","trackTimeout","scrollStop","clientX","clientY","onHandleMouseTouchDownAction","isNaN","getHostElementInvertedScale","_documentMixed","_info","_windowElementNative","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","_left_top","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","handleOffset","_handleOffset","scrollRange","_currentScroll","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","_scrollbarsHandleHovered","_supportTransition","shallBeVisible","scrollbarElement","_classNameScrollbarUnusable","delayfree","_scrollbarsAutoHideTimeoutId","_classNameScrollbarAutoHidden","anyActive","handleCSS","handleRatio","floor","_Width_Height","_handleLengthRatio","scrollOrTransition","transformOffset","isRTLisHorizontal","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","maxScroll","getScrollRatio","getHandleOffset","scrollRatio","snappedHandleOffset","_currentScrollRatio","_supportTransform","strTranslateBrace","transitionStr","assembledValue","strResult","valueArray","regExpMain","regExpValidate","properties","splitCssStyleByComma","$1","getCSSTransitionString","_snappedHandleOffset","isTrack","element2","_classNameScrollbarTrackOff","_classNameScrollbarHandleOff","_l_t","_scrollHorizontalInfo","_scrollVerticalInfo","setupScrollbarCornerDOM","args","dependent","ext","callbacks","extensionOnName","_extensions","_callbacksInitQeueue","targetCSSObject","prefix","zeroX","zeroY","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","isHTMLElement","parentWindow","nodeName","toFloat","num","classesOrAttrs","content","selectParentOrOnlyChildren","onlyChildren","selectParent","getObjectPropVal","path","splits","setObjectPropVal","splitsLength","extendObj","extendObjRoot","current","cache","_frameworkProto","doAdd","_plugin","inst","_defaultOptions","_windowElement","_contentElementScrollSizeChangeDetectedCache","_classNameViewportElement","_classNameScrollbarTrack","_classNameScrollbarHandle","_classNameScrollbarCorner","_updateAutoCache","sleep","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","curr","changedAttrs","checks","_elem","_attrs","check","meaningfulAttrsChanged","float","bodyMinSizeC","contentElementScrollSize","textareaValueLength","setCSS","updateAutoContentSizeChanged","takeRecords","changedOps","option","extName","removeExt","pop","coordinates","checkSettingsStringValue","currValue","allowedValues","strLength","getRawScroll","isX","coordinateProps","coordinatesXAxisProps","coordinatesYAxisProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","isRTLisX","normalizeShortcuts","evalFunc","eval","coordinatesOperators","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","finalElement","normalizeInvert","normalizeNegate","scrollX","scrollXRatio","maxScrollX","ratio","handleLengthRatio","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","proxyCompleteCallback","marginLength","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","elementSize","finalizeBlock","vars","lt","blockIsEnd","blockIsCenter","blockIsNearest","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","param1","param2","param3","getElements","elementName","host","viewport","scrollbarHorizontal","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","changePropertyName","destroyed","sleeping","documentMixed","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","console","warn","instanceRemoved","removed","valid","initBodyScroll","bodyMouseTouchDownListener","initialize","pageOffset","getCoordinates","mouseDownSize","mouseDownPosition","eventIsTrusted","releaseCapture","reconnectMutationObserver","screenX","screenY","setCapture","setupScrollbarCornerEvents","activeElement","focus","construct","possibleTemplateTypes","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","optionsDefaultsAndTemplate","convert","_pluginsExtensions","autoUpdateInterval","touchSupport","snapHandle","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","template","recursive","valType","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","JSON","stringify","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","factory","toObject","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","tailPos","m","symbols","_extends","assign","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","mergeHostClassNames","OverlayScrollbars","osClassNames","OverlayScrollbarsComponent","_ref","_ref$options","rest","osTargetRef","React","useRef","useEffect","ref","displayName"],"mappings":"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","file":"4.9a890a1f.iframe.bundle.js","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar setInternalState = require('../internals/internal-state').set;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) setInternalState(result, { sticky: sticky });\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar getSubstitution = require('../internals/get-substitution');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.es/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n});\n","/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.0\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 02.08.2020\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n                    var elm = FRAMEWORK(event.target);\r\n\r\n                    eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                        if (elm.is(updateOnLoadSelector)) {\r\n                            update({ _contentSizeChanged: true });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));","var toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar replace = ''.replace;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace.call(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (ch.charAt(0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return str.slice(0, position);\n      case \"'\": return str.slice(tailPos);\n      case '<':\n        capture = namedCaptures[ch.slice(1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport OverlayScrollbars from 'overlayscrollbars';\n\n/**\n * Using overlayscrollbars-react component results use the esm modules\n * which doesn't go through babel leading to IE 11 uncompatibility\n * A PR is submitted that may fix this:\n * https://github.com/KingSora/OverlayScrollbars/pull/218\n * */\nexport var OverlayScrollbarsComponent = function OverlayScrollbarsComponent(_ref) {\n  var _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options,\n      extensions = _ref.extensions,\n      className = _ref.className,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"options\", \"extensions\", \"className\", \"children\"]);\n\n  var osTargetRef = React.useRef();\n  var osInstance = React.useRef();\n  React.useEffect(function () {\n    osInstance.current = OverlayScrollbars(osTargetRef.current, options, extensions);\n    mergeHostClassNames(osInstance.current, className);\n    return function () {\n      if (OverlayScrollbars.valid(osInstance.current)) {\n        osInstance.current.destroy();\n        osInstance.current = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      osInstance.current.options(options);\n    }\n  }, [options]);\n  React.useEffect(function () {\n    if (OverlayScrollbars.valid(osInstance.current)) {\n      mergeHostClassNames(osInstance.current, className);\n    }\n  }, [className]);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: \"os-host\"\n  }, rest, {\n    ref: osTargetRef\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-resize-observer-host\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-padding\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-viewport\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-content\"\n  }, children))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-horizontal \"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar os-scrollbar-vertical\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-track\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-handle\"\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"os-scrollbar-corner\"\n  }));\n};\nOverlayScrollbarsComponent.displayName = \"OverlayScrollbarsComponent\";\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    var _osInstance$getElemen = osInstance.getElements(),\n        host = _osInstance$getElemen.host;\n\n    var regex = new RegExp(\"(^os-host([-_].+|)$)|\".concat(osInstance.options().className.replace(/\\s/g, '$|'), \"$\"), 'g');\n    var osClassNames = host.className.split(' ').filter(function (name) {\n      return name.match(regex);\n    }).join(' ');\n    host.className = \"\".concat(osClassNames, \" \").concat(className || '');\n  }\n}\n\nexport default OverlayScrollbarsComponent;"],"sourceRoot":""}